{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const faceAPI = {\n  // Detect faces in image\n  detectFaces: async imageFile => {\n    const formData = new FormData();\n    formData.append('file', imageFile);\n    const response = await api.post('/api/face/detect', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // Recognize face\n  recognizeFace: async imageFile => {\n    const formData = new FormData();\n    formData.append('file', imageFile);\n    const response = await api.post('/api/face/recognize', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  encodeFace: async imageFile => {\n    const formData = new FormData();\n    formData.append('file', imageFile);\n    const response = await api.post('/api/face/encode', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  }\n};\nexport const userAPI = {\n  // Register new user\n  registerUser: async (userData, imageFile) => {\n    const formData = new FormData();\n    formData.append('file', imageFile);\n    Object.keys(userData).forEach(key => {\n      if (userData[key] !== null && userData[key] !== undefined) {\n        formData.append(key, userData[key]);\n      }\n    });\n    const response = await api.post('/api/users/register', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // Get user by ID\n  getUser: async userId => {\n    const response = await api.get(`/api/users/${userId}`);\n    return response.data;\n  },\n  // Get all users\n  getAllUsers: async () => {\n    const response = await api.get('/api/users/');\n    return response.data;\n  },\n  // Update user\n  updateUser: async (userId, userData) => {\n    const formData = new FormData();\n    Object.keys(userData).forEach(key => {\n      if (userData[key] !== null && userData[key] !== undefined) {\n        formData.append(key, userData[key]);\n      }\n    });\n    const response = await api.put(`/api/users/${userId}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // Delete user\n  deleteUser: async userId => {\n    const response = await api.delete(`/api/users/${userId}`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","faceAPI","detectFaces","imageFile","formData","FormData","append","response","post","data","recognizeFace","encodeFace","userAPI","registerUser","userData","Object","keys","forEach","key","undefined","getUser","userId","get","getAllUsers","updateUser","put","deleteUser","delete"],"sources":["/Users/gajanan/face-recognition-webapp/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const faceAPI = {\n  // Detect faces in image\n  detectFaces: async (imageFile) => {\n    const formData = new FormData();\n    formData.append('file', imageFile);\n    \n    const response = await api.post('/api/face/detect', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  // Recognize face\n  recognizeFace: async (imageFile) => {\n    const formData = new FormData();\n    formData.append('file', imageFile);\n    \n    const response = await api.post('/api/face/recognize', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n  encodeFace: async (imageFile) => {\n    const formData = new FormData();\n    formData.append('file', imageFile);\n  \n    const response = await api.post('/api/face/encode', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n  \n    return response.data;\n  }\n  \n};\n\nexport const userAPI = {\n  // Register new user\n  registerUser: async (userData, imageFile) => {\n    const formData = new FormData();\n    formData.append('file', imageFile);\n    Object.keys(userData).forEach(key => {\n      if (userData[key] !== null && userData[key] !== undefined) {\n        formData.append(key, userData[key]);\n      }\n    });\n    \n    const response = await api.post('/api/users/register', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  // Get user by ID\n  getUser: async (userId) => {\n    const response = await api.get(`/api/users/${userId}`);\n    return response.data;\n  },\n\n  // Get all users\n  getAllUsers: async () => {\n    const response = await api.get('/api/users/');\n    return response.data;\n  },\n\n  // Update user\n  updateUser: async (userId, userData) => {\n    const formData = new FormData();\n    Object.keys(userData).forEach(key => {\n      if (userData[key] !== null && userData[key] !== undefined) {\n        formData.append(key, userData[key]);\n      }\n    });\n    \n    const response = await api.put(`/api/users/${userId}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  // Delete user\n  deleteUser: async (userId) => {\n    const response = await api.delete(`/api/users/${userId}`);\n    return response.data;\n  },\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}