{"ast":null,"code":"var _jsxFileName = \"/Users/gajanan/face-recognition-webapp/frontend/src/components/AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Webcam from 'react-webcam';\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwtDecode from 'jwt-decode';\nimport { faceAPI } from '../api/faceApi'; // adjust path if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [googleUser, setGoogleUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const [faceMatched, setFaceMatched] = useState(false);\n  const webcamRef = useRef(null);\n  const adminEmail = 'ne.jaunjal@gmail.com'; // ✅ change this to your admin email\n\n  // Handle Google Login Success\n  const handleGoogleLoginSuccess = credentialResponse => {\n    const decoded = jwtDecode(credentialResponse.credential);\n    if (decoded.email === adminEmail) {\n      setGoogleUser(decoded);\n      setMessage('Google login successful. Please capture your face.');\n    } else {\n      setMessage('Access Denied. Not an admin email.');\n    }\n  };\n  const handleGoogleLoginError = () => {\n    setMessage('Google login failed.');\n  };\n\n  // Handle face capture and verification\n  const handleFaceCapture = async () => {\n    if (!webcamRef.current) return;\n    const imageSrc = webcamRef.current.getScreenshot();\n    const imageBlob = await fetch(imageSrc).then(res => res.blob());\n    const file = new File([imageBlob], 'face.jpg', {\n      type: 'image/jpeg'\n    });\n    try {\n      const recognizeResponse = await faceAPI.recognizeFace(file);\n      if (recognizeResponse.success && recognizeResponse.user_found) {\n        if (recognizeResponse.user.email === adminEmail) {\n          setFaceMatched(true);\n          setMessage(`Welcome, ${recognizeResponse.user.name}`);\n        } else {\n          setMessage('Face does not match admin profile.');\n        }\n      } else {\n        setMessage('Face not recognized.');\n      }\n    } catch (error) {\n      console.error('Error recognizing face:', error);\n      setMessage('Error during face recognition.');\n    }\n  };\n\n  // Show login page first\n  if (!googleUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Admin Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4\",\n          children: \"Login with your Google admin account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleGoogleLoginSuccess,\n          onError: handleGoogleLoginError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 mt-4\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n  // After login, prompt face capture\n  if (!faceMatched) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex flex-col items-center justify-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold\",\n        children: [\"Welcome \", googleUser.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        className: \"rounded-lg shadow-md\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFaceCapture,\n        className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        children: \"Verify Face\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If both email and face match → show dashboard\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-6\",\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome, \", googleUser.name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", googleUser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"2Kyl7Bmg/wyWJg9o3quIa4Qdi4o=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useRef","Webcam","GoogleLogin","jwtDecode","faceAPI","jsxDEV","_jsxDEV","AdminDashboard","_s","googleUser","setGoogleUser","message","setMessage","faceMatched","setFaceMatched","webcamRef","adminEmail","handleGoogleLoginSuccess","credentialResponse","decoded","credential","email","handleGoogleLoginError","handleFaceCapture","current","imageSrc","getScreenshot","imageBlob","fetch","then","res","blob","file","File","type","recognizeResponse","recognizeFace","success","user_found","user","name","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","ref","screenshotFormat","onClick","_c","$RefreshReg$"],"sources":["/Users/gajanan/face-recognition-webapp/frontend/src/components/AdminDashboard.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Webcam from 'react-webcam';\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwtDecode from 'jwt-decode';\nimport { faceAPI } from '../api/faceApi'; // adjust path if needed\n\nconst AdminDashboard = () => {\n  const [googleUser, setGoogleUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const [faceMatched, setFaceMatched] = useState(false);\n  const webcamRef = useRef(null);\n\n  const adminEmail = 'ne.jaunjal@gmail.com'; // ✅ change this to your admin email\n\n  // Handle Google Login Success\n  const handleGoogleLoginSuccess = (credentialResponse) => {\n    const decoded = jwtDecode(credentialResponse.credential);\n    if (decoded.email === adminEmail) {\n      setGoogleUser(decoded);\n      setMessage('Google login successful. Please capture your face.');\n    } else {\n      setMessage('Access Denied. Not an admin email.');\n    }\n  };\n\n  const handleGoogleLoginError = () => {\n    setMessage('Google login failed.');\n  };\n\n  // Handle face capture and verification\n  const handleFaceCapture = async () => {\n    if (!webcamRef.current) return;\n\n    const imageSrc = webcamRef.current.getScreenshot();\n    const imageBlob = await fetch(imageSrc).then((res) => res.blob());\n    const file = new File([imageBlob], 'face.jpg', { type: 'image/jpeg' });\n\n    try {\n      const recognizeResponse = await faceAPI.recognizeFace(file);\n\n      if (recognizeResponse.success && recognizeResponse.user_found) {\n        if (recognizeResponse.user.email === adminEmail) {\n          setFaceMatched(true);\n          setMessage(`Welcome, ${recognizeResponse.user.name}`);\n        } else {\n          setMessage('Face does not match admin profile.');\n        }\n      } else {\n        setMessage('Face not recognized.');\n      }\n    } catch (error) {\n      console.error('Error recognizing face:', error);\n      setMessage('Error during face recognition.');\n    }\n  };\n\n  // Show login page first\n  if (!googleUser) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\">Admin Login</h1>\n          <p className=\"mb-4\">Login with your Google admin account</p>\n          <GoogleLogin\n            onSuccess={handleGoogleLoginSuccess}\n            onError={handleGoogleLoginError}\n          />\n          {message && <p className=\"text-red-500 mt-4\">{message}</p>}\n        </div>\n      </div>\n    );\n  }\n\n  // After login, prompt face capture\n  if (!faceMatched) {\n    return (\n      <div className=\"min-h-screen flex flex-col items-center justify-center space-y-4\">\n        <h2 className=\"text-xl font-semibold\">Welcome {googleUser.name}</h2>\n        <Webcam\n          ref={webcamRef}\n          screenshotFormat=\"image/jpeg\"\n          className=\"rounded-lg shadow-md\"\n        />\n        <button\n          onClick={handleFaceCapture}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n        >\n          Verify Face\n        </button>\n        {message && <p className=\"text-red-500\">{message}</p>}\n      </div>\n    );\n  }\n\n  // If both email and face match → show dashboard\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"text-center\">\n        <h1 className=\"text-3xl font-bold mb-6\">Admin Dashboard</h1>\n        <p>Welcome, {googleUser.name}!</p>\n        <p>Email: {googleUser.email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}